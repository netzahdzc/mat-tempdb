#!/usr/bin/python
import requests
import json

url = 'http://localhost:1026/v2/subscriptions'
payloads = [{"description":"Subscription to store physical tests","subject":{"entities":[{"idPattern":".*","type":"MotorPhysicalTest"}],"condition":{"attrs":["testType"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","testType","refUser","refDevice","configuration","dateTestStarted","dateTestEnded"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store smartphone devices","subject":{"entities":[{"idPattern":".*","type":"Device"}],"condition":{"attrs":["consistOf"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","category","osVersion","softwareVersion","hardwareVersion","firmwareVersion","consistOf","refDeviceModel","dateCreated"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store sensors devices","subject":{"entities":[{"idPattern":".*","type":"Device"}],"condition":{"attrs":["value"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","category","function","controlledProperty","hardwareVersion","firmwareVersion","value","configuration","dateCreated"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store devices model","subject":{"entities":[{"idPattern":".*","type":"DeviceModel"}],"condition":{"attrs":["brandName"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","category","brandName","modelName","manufacturerName","dateCreated"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store control test data","subject":{"entities":[{"idPattern":".*","type":"ControlTest"}],"condition":{"attrs":["refUser"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","refUser","omh@body_weight","omh@body_height","waistCircumference","omh@heart_rate","omh@systolic_blood_pressure","omh@diastolic_blood_pressure","dateCreated"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store participants data","subject":{"entities":[{"idPattern":".*","type":"Participant"}],"condition":{"attrs":["name"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","name","surname","gender","birthday","trash"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store users data","subject":{"entities":[{"idPattern":".*","type":"User"}],"condition":{"attrs":["name"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","name","surname","activationCode","activationStatus","email","trash"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store questionnaires","subject":{"entities":[{"idPattern":".*","type":"Questionnaire"}],"condition":{"attrs":["refQuestion"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","questionnaireType","refQuestion","description"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store questions","subject":{"entities":[{"idPattern":".*","type":"Question"}],"condition":{"attrs":["refQuestionnaire"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","refQuestionnaire","category","value","language"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1},{"description":"Subscription to store answers","subject":{"entities":[{"idPattern":".*","type":"Answer"}],"condition":{"attrs":["refQuestion"]}},"notification":{"http":{"url":"http://quantumleap:8668/v2/notify"},"attrs":["id","type","refQuestion","refUser","answer"],"metadata":["dateCreated","dateModified"]},"expires":"2020-01-01T12:00:00.00Z","throttling":1}]

headers = {
	"Content-Type": "application/json",
	"Accept": "application/json",
	"Fiware-Service": "matest",
	"Fiware-ServicePath": "/smartphone"
}

for payload in payloads:
	r = requests.post(url, data=json.dumps(payload), headers=headers)
	print(r.status_code)



